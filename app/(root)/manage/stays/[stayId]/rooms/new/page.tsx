"use client";
import React from "react";
import type Room from "@/types/Room";
import { createRoom } from "@/lib/actions/ManageActions"; // Assume you have this function
import {useParams, useRouter} from "next/navigation";
import { toast } from "@/hooks/use-toast";
import BigLoadingSpinner from "@/components/shared/BigLoadingSpinner";

interface NewRoomPageParams {
  stayId: string;
}
const NewRoomPage: React.FC = () => {
  const {stayId} = useParams() as unknown as NewRoomPageParams;
  const router = useRouter();
  const [room, setRoom] = React.useState<Room>({
    id: "", // This will be generated by the backend
    name: "",
    type: "Standard",
    base_fare: 0,
    discount: 0,
    tax: 0,
    service_fee: 0,
    is_available: true,
    max_guests: 1,
    image_url: "",
  });
  const [isLoading, setIsLoading] = React.useState<boolean>(false);

  const [imageFile, setImageFile] = React.useState<File | null>(null);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value, type } = e.target;
    setRoom((prevRoom) => ({
      ...prevRoom,
      [name]: type === "number" ? (value === "" ? "" : Number(value)) : value,
    }));
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0] || null;
    setImageFile(file);
  };

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    onSave(room, imageFile);
  };

  const onSave = (room: Room, imageFile: File | null) => {
    setIsLoading(true);
    const formData = new FormData();
    formData.append("name", room.name);
    formData.append("stay_id", stayId);
    formData.append("base_fare", room.base_fare.toString());
    formData.append("type", room.type);
    formData.append("max_guests", room.max_guests.toString());
    formData.append("discount", room.discount.toString());
    formData.append("tax", room.tax.toString());
    formData.append("service_fee", room.service_fee.toString());

    if (imageFile) {
      formData.append("image", imageFile);
    }

    createRoom(formData)
      .then((data) => {
        toast({
          title: "Success",
          description: "Room created successfully",
          variant: "success",
          duration: 3000,
        });
        router.push(`/manage/stays/${stayId}`); // Redirect to the new room's page
      })
      .catch((error) => {
        console.log(error);
        toast({
          title: "Error",
          description: "Failed to create room",
          variant: "error",
          duration: 3000,
        });
      }).finally(() => {
        setIsLoading(false);
    });
  };

  if(isLoading) {
    return <BigLoadingSpinner />
  }

  return (
    <div>
      <h1 className="h2-bold py-8">Create New Room</h1>
      <form onSubmit={handleSubmit} className="space-y-4">
        <div>
          <label className="block font-medium">Name</label>
          <input
            type="text"
            name="name"
            value={room.name}
            onChange={handleChange}
            className="w-full p-2 border border-gray-300 rounded"
            required
          />
        </div>
        <div>
          <label className="block font-medium">Type</label>
          <select
            name="type"
            value={room.type}
            onChange={handleChange}
            className="w-full p-2 border border-gray-300 rounded"
          >
            <option value="Standard">Standard</option>
            <option value="Deluxe">Deluxe</option>
            <option value="Suite">Suite</option>
            <option value="Family">Family</option>
            <option value="Presidential">Presidential</option>
          </select>
        </div>
        <div>
          <label className="block font-medium">Base Fare</label>
          <input
            type="number"
            name="base_fare"
            value={room.base_fare}
            onChange={handleChange}
            className="w-full p-2 border border-gray-300 rounded"
            required
          />
        </div>
        <div>
          <label className="block font-medium">Discount ($)</label>
          <input
            type="number"
            name="discount"
            value={room.discount}
            onChange={handleChange}
            className="w-full p-2 border border-gray-300 rounded"
          />
        </div>
        <div>
          <label className="block font-medium">Tax ($)</label>
          <input
            type="number"
            name="tax"
            value={room.tax}
            onChange={handleChange}
            className="w-full p-2 border border-gray-300 rounded"
          />
        </div>
        <div>
          <label className="block font-medium">Service Fee</label>
          <input
            type="number"
            name="service_fee"
            value={room.service_fee}
            onChange={handleChange}
            className="w-full p-2 border border-gray-300 rounded"
          />
        </div>
        <div>
          <label className="block font-medium">Max Guests</label>
          <input
            type="number"
            name="max_guests"
            value={room.max_guests}
            onChange={handleChange}
            className="w-full p-2 border border-gray-300 rounded"
          />
        </div>
        <div>
          <label className="block font-medium">Image</label>
          <input
            type="file"
            name="image"
            onChange={handleFileChange}
            className="w-full p-2 border border-gray-300 rounded"
            accept="image/*"
          />
        </div>
        <div className="flex justify-center space-x-4">
          <button
            type="submit"
            className="px-4 py-2 bg-primary-100 w-full rounded"
          >
            Create
          </button>
        </div>
      </form>
    </div>
  );
};

export default NewRoomPage;
